{"version":3,"sources":["redux/todos/todos-selectors.js","redux/todos/todos-actions.js","redux/todos/todos-operations.js","components/Loader/Loader.jsx","icons/TrashIcon/TrashIcon.jsx","components/App/App.jsx","components/App/AppContainer.js","lib/delete-item-by-id.js","redux/todos/todos-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["getTodos","state","todos","items","getTodosCount","length","getSelectedItemsCount","selectedItems","getSelectedItems","getFilter","filter","getLoading","loading","getError","error","getFilteredTodos","createSelector","item","RegExp","test","label","getCompletedCount","completed","getNoCompleted","count","filterChange","createAction","payload","id","nanoid","fetchTodosRequested","fetchTodosSuccess","fetchTodosFailure","addTodoRequested","addTodoSuccess","addTodoFailure","removeTodoRequested","removeTodoSuccess","removeTodoFailure","toggleCompletedRequest","toggleCompletedSuccess","toggleCompletedFailure","selectItem","unselectItem","deleteItems","axios","defaults","baseURL","Loader","className","style","borderTopColor","TrashIcon","props","xmlns","width","height","fill","viewBox","d","fillRule","App","handleChange","event","setState","target","value","onSubmit","preventDefault","addToDo","onHandleDelete","dataset","deleteTodo","onFilterChange","renderStats","completedCount","noCompletedCount","todoCount","selectedItemsCount","selectItems","onClick","handleChangeCheckbox","checked","name","this","fetchTodos","placeholder","onChange","map","type","toggleCompleted","data-id","PureComponent","mapDispatchToProps","dispatch","a","post","data","delete","getState","console","log","get","patch","connect","deleteItemById","arr","propName","idx","findIndex","slice","createReducer","_","Number","some","deleteId","index","deletedId","handleError","response","clearError","rootReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6dc948d.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getTodos = (state) => state.todos.items;\nconst getTodosCount = (state) => state.todos.items.length;\nconst getSelectedItemsCount = (state) => state.todos.selectedItems.length;\nconst getSelectedItems = (state) => state.todos.selectedItems;\nconst getFilter = (state) => state.todos.filter;\nconst getLoading = (state) => state.todos.loading;\nconst getError = (state) => state.todos.error;\n\nconst getFilteredTodos = createSelector(\n  [getTodos, getFilter],\n  (items, filter) =>\n    items.filter((item) => new RegExp(filter, \"i\").test(item.label))\n);\n\nconst getCompletedCount = createSelector(\n  [getTodos],\n  (todos) => todos.filter((item) => item.completed).length\n);\n\nconst getNoCompleted = createSelector(\n  [getTodosCount, getCompletedCount],\n  (count, completed) => count - completed\n);\n\n/// const cacheFunction = (...func) => {\n// const cache = {};\n// func.forEach(fn => {\n//\n// const resultFn = fn(a, b);\n// if(cache) {\n// return cache\n// }\n// cache.f1 = resultFn;\n// })\n//\n// }\n//\n//\n//\n//\n\nexport {\n  getFilteredTodos,\n  getLoading,\n  getError,\n  getFilter,\n  getTodos,\n  getCompletedCount,\n  getNoCompleted,\n  getTodosCount,\n  getSelectedItemsCount,\n  getSelectedItems,\n};\n","import { createAction, nanoid } from \"@reduxjs/toolkit\";\n\nconst addToDo = createAction(\"todos/add\", (label) => {\n  return {\n    payload: {\n      id: nanoid(),\n      label,\n    },\n  };\n});\n\nconst removeToDo = createAction(\"todos/remove\");\nconst filterChange = createAction(\"todos/filter\");\n\n// getAll\nconst fetchTodosRequested = createAction(\"todos/fetch-todos-requested\");\nconst fetchTodosSuccess = createAction(\"todos/fetch-todos-success\");\nconst fetchTodosFailure = createAction(\"todos/fetch-todos-failure\");\n\n// create\nconst addTodoRequested = createAction(\"todos/add-todo-requested\");\nconst addTodoSuccess = createAction(\"todos/add-todo-success\");\nconst addTodoFailure = createAction(\"todos/add-todo-failure\");\n\n// delete\nconst removeTodoRequested = createAction(\"todos/remove-todo-requested\");\nconst removeTodoSuccess = createAction(\"todos/remove-todo-success\");\nconst removeTodoFailure = createAction(\"todos/remove-todo-failure\");\n\n// toggle\nconst toggleCompletedRequest = createAction(\"todos/toggleCompletedRequest\");\nconst toggleCompletedSuccess = createAction(\"todos/toggleCompletedSuccess\");\nconst toggleCompletedFailure = createAction(\"todos/toggleCompletedFailure\");\n\n//\nconst selectItem = createAction(\"todos/select-item\");\nconst unselectItem = createAction(\"todos/unselect-item\");\nconst deleteItems = createAction(\"todos/delete-items\");\n\nexport {\n  addToDo,\n  removeToDo,\n  filterChange,\n  fetchTodosRequested,\n  fetchTodosSuccess,\n  fetchTodosFailure,\n  addTodoFailure,\n  addTodoRequested,\n  addTodoSuccess,\n  removeTodoFailure,\n  removeTodoSuccess,\n  removeTodoRequested,\n  toggleCompletedRequest,\n  toggleCompletedSuccess,\n  toggleCompletedFailure,\n  selectItem,\n  unselectItem,\n  deleteItems,\n};\n","import axios from \"axios\";\n\nimport {\n  fetchTodosRequested,\n  fetchTodosSuccess,\n  fetchTodosFailure,\n  addTodoRequested,\n  addTodoSuccess,\n  removeTodoFailure,\n  removeTodoSuccess,\n  removeTodoRequested,\n  addTodoFailure,\n  toggleCompletedRequest,\n  toggleCompletedSuccess,\n  toggleCompletedFailure,\n} from \"./todos-actions\";\n\naxios.defaults.baseURL = \"http://localhost:3004\";\n\nconst fetchTodos = () => async (dispatch, getState) => {\n  console.log(getState, \"[getState]\");\n  console.log(dispatch, \"[dispatch]\");\n  dispatch(fetchTodosRequested());\n  try {\n    const { data } = await axios.get(\"/todos\");\n    dispatch(fetchTodosSuccess(data));\n  } catch (errors) {\n    dispatch(fetchTodosFailure(errors));\n  }\n};\n\nconst deleteTodo = (id) => async (dispatch) => {\n  dispatch(removeTodoRequested());\n  try {\n    await axios.delete(`/todos/${id}`);\n    dispatch(removeTodoSuccess(id));\n  } catch (errors) {\n    dispatch(removeTodoFailure(errors));\n  }\n};\n\nconst addToDo = (label) => async (dispatch) => {\n  dispatch(addTodoRequested());\n  try {\n    const { data } = await axios.post(\"/todos\", { label, completed: false });\n    dispatch(addTodoSuccess(data));\n  } catch (errors) {\n    dispatch(addTodoFailure(errors));\n  }\n};\n\nconst toggleCompleted = (id, completed) => async (dispatch) => {\n  dispatch(toggleCompletedRequest());\n  try {\n    const { data } = await axios.patch(`/todos/${id}`, { completed });\n    dispatch(toggleCompletedSuccess(data));\n  } catch (error) {\n    dispatch(toggleCompletedFailure(error));\n  }\n};\n\nexport { fetchTodos, deleteTodo, addToDo, toggleCompleted };\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"text-center\">\n      <div\n        style={{\n          borderTopColor: \"transparent\",\n        }}\n        className=\"border-solid animate-spin  rounded-full border-blue-400 border-8 h-20 w-20\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst TrashIcon = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      className=\"bi bi-trash\"\n      viewBox=\"0 0 16 16\"\n      {...props}\n    >\n      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n      <path\n        fillRule=\"evenodd\"\n        d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n      />\n    </svg>\n  );\n};\n\nexport default TrashIcon;\n","import React, { PureComponent } from \"react\";\nimport Loader from \"../Loader\";\nimport TrashIcon from \"../../icons/TrashIcon\";\nimport { deleteItems } from \"../../redux/todos/todos-actions\";\n\nclass App extends PureComponent {\n  state = {\n    label: \"\",\n  };\n\n  componentDidMount() {\n    // const { fetchTodos } = this.props;\n    this.props.fetchTodos();\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      label: event.target.value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { label } = this.state;\n    this.props.addToDo(label);\n    this.setState({\n      label: \"\",\n    });\n  };\n\n  onHandleDelete = (event) => {\n    const { id } = event.target.dataset;\n    this.props.deleteTodo(id);\n  };\n\n  onFilterChange = (event) => {\n    const { value } = event.target;\n    const { filterChange } = this.props;\n    filterChange(value);\n  };\n\n  renderStats = () => {\n    const {\n      completedCount,\n      noCompletedCount,\n      todoCount,\n      selectedItemsCount,\n      deleteItems,\n      selectItems,\n    } = this.props;\n    return (\n      <div className=\"grid grid-cols-2\">\n        <div className=\"mt-3 shadow-sm\">\n          <h3>\n            Выполнено {completedCount} осталось {noCompletedCount}\n          </h3>\n          <h3>Всего: {todoCount}</h3>\n        </div>\n        <div className=\"flex items-center justify-end\">\n          <div className=\"flex\">\n            <h3>Выбрано: {selectedItemsCount}</h3>\n            <button\n              className=\"bg-red-500 text-white px-2 py-2\"\n              onClick={() => deleteItems(selectItems)}\n            >\n              <TrashIcon />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  handleChangeCheckbox = ({ target }) => {\n    const { checked, name } = target;\n    const { unselectItem, selectItem } = this.props;\n    if (checked) {\n      selectItem(name);\n    } else {\n      unselectItem(name);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"h-100 w-full flex items-center justify-center bg-teal-lightest font-sans\">\n        <div className=\"bg-white rounded shadow p-4 m-4 w-full lg:w-3/4 lg:max-w-2xl\">\n          <div className=\"mb-4\">\n            <h1 className=\"text-grey-darkest\">Todos List:</h1>\n            {this.renderStats()}\n            <form className=\"flex mt-4\" onSubmit={this.onSubmit}>\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker\"\n                placeholder=\"Add Todo\"\n                onChange={this.handleChange}\n                value={this.state.label}\n              />\n              <button className=\"flex-no-shrink p-2 border-2 rounded text-blue-500 border-blue-400 hover:text-white hover:bg-blue-400\">\n                Add\n              </button>\n            </form>\n          </div>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker mb-6\"\n            placeholder=\"Filter Todo\"\n            onChange={this.onFilterChange}\n            value={this.props.filter}\n          />\n          <div>\n            {this.props.error && <h3>Error</h3>}\n            {this.props.todos.map(({ label, id, completed }) => (\n              <div key={id} className=\"flex justify-between mb-4 items-center\">\n                <div className=\"flex\">\n                  <label className=\"inline-flex items-center\">\n                    <input\n                      name={id}\n                      type=\"checkbox\"\n                      className=\"form-checkbox\"\n                      onChange={this.handleChangeCheckbox}\n                    />\n                    <span className=\"ml-2\" />\n                  </label>\n                  <p className=\"text-grey-darkest\">{label}</p>\n                </div>\n                <div>\n                  <button\n                    className={`flex-no-shrink flex-nowrap p-2 ml-2 border-2 rounded ${\n                      !completed\n                        ? \"hover:text-white text-green-400 border-green-400 hover:bg-green-400\"\n                        : \"hover:text-white text-blue-400 border-blue-400 hover:bg-blue-400\"\n                    }`}\n                    onClick={() => this.props.toggleCompleted(id, !completed)}\n                  >\n                    {!completed ? \"Done\" : \"Not done\"}\n                  </button>\n                  <button\n                    className=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red-500 border-red-500 hover:text-white hover:bg-red-500\"\n                    data-id={id}\n                    onClick={this.onHandleDelete}\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n            ))}\n            {this.props.loading && <Loader />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport {\n  getCompletedCount,\n  getError,\n  getFilter,\n  getFilteredTodos,\n  getLoading,\n  getNoCompleted,\n  getSelectedItems,\n  getSelectedItemsCount,\n  getTodosCount,\n} from \"../../redux/todos/todos-selectors\";\nimport {\n  addToDo,\n  deleteTodo,\n  fetchTodos,\n  toggleCompleted,\n} from \"../../redux/todos/todos-operations\";\n\nimport {\n  filterChange,\n  unselectItem,\n  selectItem,\n  deleteItems,\n} from \"../../redux/todos/todos-actions\";\n\nimport App from \"./App\";\n\nconst mapStateToProps = (state) => ({\n  todos: getFilteredTodos(state),\n  todoCount: getTodosCount(state),\n  selectItems: getSelectedItems(state),\n  selectedItemsCount: getSelectedItemsCount(state),\n  completedCount: getCompletedCount(state),\n  noCompletedCount: getNoCompleted(state),\n  filter: getFilter(state),\n  loading: getLoading(state),\n  error: getError(state),\n});\n\n// const fetchTodos = (dispatch) => async () => {\n//   const f = await fetch(`http://localhost:3004/todos`);\n//   const data = await f.json();\n//   dispatch(fetchTodosAction());\n// };\n\nconst mapDispatchToProps = {\n  addToDo,\n  deleteTodo,\n  fetchTodos,\n  filterChange,\n  toggleCompleted,\n  selectItem,\n  unselectItem,\n  deleteItems,\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchTodos: () => fetchTodos(dispatch)(),\n//   };\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const deleteItemById = (arr, propName, payload) => {\n  const idx = arr.findIndex((item) => item[propName] === payload);\n  return [...arr.slice(0, idx), ...arr.slice(idx + 1)];\n};\n\nexport default deleteItemById;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  filterChange,\n  fetchTodosFailure,\n  fetchTodosSuccess,\n  fetchTodosRequested,\n  removeTodoRequested,\n  removeTodoSuccess,\n  removeTodoFailure,\n  addTodoSuccess,\n  addTodoRequested,\n  addTodoFailure,\n  toggleCompletedRequest,\n  toggleCompletedSuccess,\n  toggleCompletedFailure,\n  unselectItem,\n  selectItem,\n  deleteItems,\n} from \"./todos-actions\";\nimport deleteItemById from \"../../lib/delete-item-by-id\";\n\nconst loading = createReducer(false, {\n  [fetchTodosRequested]: () => true,\n  [fetchTodosSuccess]: () => false,\n  [fetchTodosFailure]: () => false,\n  [addTodoRequested]: () => true,\n  [addTodoSuccess]: () => false,\n  [addTodoFailure]: () => false,\n  [removeTodoRequested]: () => true,\n  [removeTodoSuccess]: () => false,\n  [removeTodoFailure]: () => false,\n  [toggleCompletedRequest]: () => true,\n  [toggleCompletedSuccess]: () => false,\n  [toggleCompletedFailure]: () => false,\n});\n\nconst items = createReducer([], {\n  [fetchTodosSuccess]: (_, { payload }) => payload,\n  [addTodoSuccess]: (state, { payload }) => [...state, payload],\n  [removeTodoSuccess]: (state, { payload }) => {\n    return deleteItemById(state, \"id\", Number(payload));\n    // const index = state.findIndex(({ id }) => id === Number(payload));\n    // return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [deleteItems]: (state, { payload }) => {\n    return state.filter(\n      (item) => !payload.some((deleteId) => item.id === Number(deleteId))\n    );\n  },\n  [toggleCompletedSuccess]: (state, { payload }) => {\n    const index = state.findIndex((item) => item.id === payload.id);\n    return [...state.slice(0, index), payload, ...state.slice(index + 1)];\n  },\n});\n\nconst selectedItems = createReducer([], {\n  [selectItem]: (state, { payload }) => [...state, payload],\n  [deleteItems]: (state, { payload }) => {\n    return state.filter(\n      (item) => !payload.some((deletedId) => +item === +deletedId)\n    ); // or return [];\n  },\n  [unselectItem]: (state, { payload }) => {\n    const index = state.findIndex((item) => +item === +payload);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n});\n\nconst handleError = (_, { payload }) => payload.response.data;\nconst clearError = () => null;\n\nconst error = createReducer(null, {\n  [fetchTodosRequested]: clearError,\n  [fetchTodosFailure]: handleError,\n  [addTodoRequested]: clearError,\n  [addTodoFailure]: handleError,\n  [removeTodoRequested]: clearError,\n  [removeTodoFailure]: handleError,\n  [toggleCompletedRequest]: clearError,\n  [toggleCompletedFailure]: handleError,\n});\n\nconst filter = createReducer(\"\", {\n  [filterChange]: (_, { payload }) => payload,\n});\n\nconst todos = combineReducers({\n  items,\n  selectedItems,\n  loading,\n  error,\n  filter,\n});\n\nexport default todos;\n","import todos from \"./todos/todos-reducer\";\n\nconst rootReducer = {\n  todos,\n};\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n// import logger from 'redux-logger';\n\nimport rootReducer from \"./root-reducer\";\n\n// const loggerMiddleware = (store) => (next) => (action) => {\n//   console.group(action.type);\n//   console.info(action);\n//   console.log(action.type);\n//   console.groupEnd();\n//\n//   return next(action);\n// };\n\n// function f(store) {\n//   return function (next) {\n//     return function (action) {\n//\n//     }\n//   }\n// }\n\n// const thunk = ({ dispatch, getState }) => (next) => (action) => {\n//   if (typeof action === \"function\") {\n//     return action(dispatch, getState);\n//   }\n//\n//   return next(action);\n// };\n\n// console.log(getDefaultMiddleware(), '[getDefaultMiddleware]')\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n  // middleware: [...getDefaultMiddleware(), logger],\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nimport \"./shared/styles/globalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}